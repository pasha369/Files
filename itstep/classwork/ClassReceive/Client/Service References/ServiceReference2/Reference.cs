//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.36279
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MathResult", Namespace="http://schemas.datacontract.org/2004/07/ClassReceive")]
    [System.SerializableAttribute()]
    public partial class MathResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double divField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double multField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double subtrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double sumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double div {
            get {
                return this.divField;
            }
            set {
                if ((this.divField.Equals(value) != true)) {
                    this.divField = value;
                    this.RaisePropertyChanged("div");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double mult {
            get {
                return this.multField;
            }
            set {
                if ((this.multField.Equals(value) != true)) {
                    this.multField = value;
                    this.RaisePropertyChanged("mult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double subtr {
            get {
                return this.subtrField;
            }
            set {
                if ((this.subtrField.Equals(value) != true)) {
                    this.subtrField = value;
                    this.RaisePropertyChanged("subtr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double sum {
            get {
                return this.sumField;
            }
            set {
                if ((this.sumField.Equals(value) != true)) {
                    this.sumField = value;
                    this.RaisePropertyChanged("sum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IMyMath")]
    public interface IMyMath {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyMath/Total", ReplyAction="http://tempuri.org/IMyMath/TotalResponse")]
        Client.ServiceReference2.MathResult Total(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMyMath/Total", ReplyAction="http://tempuri.org/IMyMath/TotalResponse")]
        System.IAsyncResult BeginTotal(int x, int y, System.AsyncCallback callback, object asyncState);
        
        Client.ServiceReference2.MathResult EndTotal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyMath/TotalDouble", ReplyAction="http://tempuri.org/IMyMath/TotalDoubleResponse")]
        Client.ServiceReference2.MathResult TotalDouble(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMyMath/TotalDouble", ReplyAction="http://tempuri.org/IMyMath/TotalDoubleResponse")]
        System.IAsyncResult BeginTotalDouble(double x, double y, System.AsyncCallback callback, object asyncState);
        
        Client.ServiceReference2.MathResult EndTotalDouble(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyMathChannel : Client.ServiceReference2.IMyMath, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Client.ServiceReference2.MathResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Client.ServiceReference2.MathResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TotalDoubleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TotalDoubleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Client.ServiceReference2.MathResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Client.ServiceReference2.MathResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyMathClient : System.ServiceModel.ClientBase<Client.ServiceReference2.IMyMath>, Client.ServiceReference2.IMyMath {
        
        private BeginOperationDelegate onBeginTotalDelegate;
        
        private EndOperationDelegate onEndTotalDelegate;
        
        private System.Threading.SendOrPostCallback onTotalCompletedDelegate;
        
        private BeginOperationDelegate onBeginTotalDoubleDelegate;
        
        private EndOperationDelegate onEndTotalDoubleDelegate;
        
        private System.Threading.SendOrPostCallback onTotalDoubleCompletedDelegate;
        
        public MyMathClient() {
        }
        
        public MyMathClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyMathClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyMathClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyMathClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<TotalCompletedEventArgs> TotalCompleted;
        
        public event System.EventHandler<TotalDoubleCompletedEventArgs> TotalDoubleCompleted;
        
        public Client.ServiceReference2.MathResult Total(int x, int y) {
            return base.Channel.Total(x, y);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTotal(int x, int y, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTotal(x, y, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Client.ServiceReference2.MathResult EndTotal(System.IAsyncResult result) {
            return base.Channel.EndTotal(result);
        }
        
        private System.IAsyncResult OnBeginTotal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int x = ((int)(inValues[0]));
            int y = ((int)(inValues[1]));
            return this.BeginTotal(x, y, callback, asyncState);
        }
        
        private object[] OnEndTotal(System.IAsyncResult result) {
            Client.ServiceReference2.MathResult retVal = this.EndTotal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTotalCompleted(object state) {
            if ((this.TotalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TotalCompleted(this, new TotalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TotalAsync(int x, int y) {
            this.TotalAsync(x, y, null);
        }
        
        public void TotalAsync(int x, int y, object userState) {
            if ((this.onBeginTotalDelegate == null)) {
                this.onBeginTotalDelegate = new BeginOperationDelegate(this.OnBeginTotal);
            }
            if ((this.onEndTotalDelegate == null)) {
                this.onEndTotalDelegate = new EndOperationDelegate(this.OnEndTotal);
            }
            if ((this.onTotalCompletedDelegate == null)) {
                this.onTotalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTotalCompleted);
            }
            base.InvokeAsync(this.onBeginTotalDelegate, new object[] {
                        x,
                        y}, this.onEndTotalDelegate, this.onTotalCompletedDelegate, userState);
        }
        
        public Client.ServiceReference2.MathResult TotalDouble(double x, double y) {
            return base.Channel.TotalDouble(x, y);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTotalDouble(double x, double y, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTotalDouble(x, y, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Client.ServiceReference2.MathResult EndTotalDouble(System.IAsyncResult result) {
            return base.Channel.EndTotalDouble(result);
        }
        
        private System.IAsyncResult OnBeginTotalDouble(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double x = ((double)(inValues[0]));
            double y = ((double)(inValues[1]));
            return this.BeginTotalDouble(x, y, callback, asyncState);
        }
        
        private object[] OnEndTotalDouble(System.IAsyncResult result) {
            Client.ServiceReference2.MathResult retVal = this.EndTotalDouble(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTotalDoubleCompleted(object state) {
            if ((this.TotalDoubleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TotalDoubleCompleted(this, new TotalDoubleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TotalDoubleAsync(double x, double y) {
            this.TotalDoubleAsync(x, y, null);
        }
        
        public void TotalDoubleAsync(double x, double y, object userState) {
            if ((this.onBeginTotalDoubleDelegate == null)) {
                this.onBeginTotalDoubleDelegate = new BeginOperationDelegate(this.OnBeginTotalDouble);
            }
            if ((this.onEndTotalDoubleDelegate == null)) {
                this.onEndTotalDoubleDelegate = new EndOperationDelegate(this.OnEndTotalDouble);
            }
            if ((this.onTotalDoubleCompletedDelegate == null)) {
                this.onTotalDoubleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTotalDoubleCompleted);
            }
            base.InvokeAsync(this.onBeginTotalDoubleDelegate, new object[] {
                        x,
                        y}, this.onEndTotalDoubleDelegate, this.onTotalDoubleCompletedDelegate, userState);
        }
    }
}
