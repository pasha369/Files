//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.36279
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MathResult", Namespace="http://schemas.datacontract.org/2004/07/ClassReceive")]
    [System.SerializableAttribute()]
    public partial class MathResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double divField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double multField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double subtrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double sumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double div {
            get {
                return this.divField;
            }
            set {
                if ((this.divField.Equals(value) != true)) {
                    this.divField = value;
                    this.RaisePropertyChanged("div");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double mult {
            get {
                return this.multField;
            }
            set {
                if ((this.multField.Equals(value) != true)) {
                    this.multField = value;
                    this.RaisePropertyChanged("mult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double subtr {
            get {
                return this.subtrField;
            }
            set {
                if ((this.subtrField.Equals(value) != true)) {
                    this.subtrField = value;
                    this.RaisePropertyChanged("subtr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double sum {
            get {
                return this.sumField;
            }
            set {
                if ((this.sumField.Equals(value) != true)) {
                    this.sumField = value;
                    this.RaisePropertyChanged("sum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMyMath")]
    public interface IMyMath {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyMath/Total", ReplyAction="http://tempuri.org/IMyMath/TotalResponse", Name = "Total")]
        Client.ServiceReference1.MathResult Total(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyMath/Total", ReplyAction="http://tempuri.org/IMyMath/TotalResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.MathResult> TotalAsync(int x, int y);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMyMath/TotalDouble", ReplyAction = "http://tempuri.org/IMyMath/TotalDoubleResponse", Name = "TotalDouble")]
        Client.ServiceReference1.MathResult Total(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyMath/TotalDouble", ReplyAction="http://tempuri.org/IMyMath/TotalDoubleResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.MathResult> TotalDoubleAsync(double x, double y);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyMathChannel : Client.ServiceReference1.IMyMath, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyMathClient : System.ServiceModel.ClientBase<Client.ServiceReference1.IMyMath>, Client.ServiceReference1.IMyMath {
        
        public MyMathClient() {
        }
        
        public MyMathClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyMathClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyMathClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyMathClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.ServiceReference1.MathResult Total(int x, int y) {
            return base.Channel.Total(x, y);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.MathResult> TotalAsync(int x, int y) {
            return base.Channel.TotalAsync(x, y);
        }
        
        public Client.ServiceReference1.MathResult Total(double x, double y) {
            return base.Channel.Total(x, y);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.MathResult> TotalDoubleAsync(double x, double y) {
            return base.Channel.TotalDoubleAsync(x, y);
        }
    }
}
